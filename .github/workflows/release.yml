name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Extract version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o coachgpt-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o coachgpt-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o coachgpt-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o coachgpt-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o coachgpt-windows-amd64.exe .

    - name: Generate checksums
      run: |
        sha256sum coachgpt-* > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          coachgpt-linux-amd64
          coachgpt-linux-arm64
          coachgpt-darwin-amd64
          coachgpt-darwin-arm64
          coachgpt-windows-amd64.exe
          checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: false
        body: |
          ## Installation

          ### macOS
          ```bash
          # Intel Mac
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/coachgpt-darwin-amd64 -o coachgpt
          chmod +x coachgpt
          sudo mv coachgpt /usr/local/bin/

          # Apple Silicon Mac
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/coachgpt-darwin-arm64 -o coachgpt
          chmod +x coachgpt
          sudo mv coachgpt /usr/local/bin/
          ```

          ### Linux
          ```bash
          # x86_64
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/coachgpt-linux-amd64 -o coachgpt
          chmod +x coachgpt
          sudo mv coachgpt /usr/local/bin/

          # ARM64
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/coachgpt-linux-arm64 -o coachgpt
          chmod +x coachgpt
          sudo mv coachgpt /usr/local/bin/
          ```

          ### Windows
          Download `coachgpt-windows-amd64.exe` from the assets below and add to your PATH.

          ## Usage
          ```bash
          # Set environment variables first
          export STRAVA_CLIENT_ID="your_client_id"
          export STRAVA_CLIENT_SECRET="your_client_secret"
          export STRAVA_HRMAX="185"

          # Run with latest activity
          coachgpt

          # Run with strength training from Hevy
          export HEVY_API_KEY="your_api_key"
          coachgpt --strength
          ```
